server:
  port: 31200
spring:
  application:
    name: sfs-service-manage-course

  #连接mongodb数据库
  data:
    mongodb:
      uri: mongodb://root:123456@localhost:27017    #url默认本地端口为27017
      database: sfs_cms                              #配置连接数据库

  #连接mysql数据库
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/sfs_course?characterEncoding=utf-8
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）

#配置pagehelper操作的数据库类型为mysql
pagehelper:
  helper-dialect: mysql


#配置eureka参数   eureka:注册中心
eureka:
  client:
    register-with-eureka: true    #服务注册开关
    fetch-registry: true        #服务发现开关
    service-url:
      defaultZone: http://localhost:50101/eureka/
  instance:
    ip-address: 127.0.0.1
    prefer-ip-address: true   #将自己的ip注册到eureka服务中
    instance-id: ${spring.application.name}:${server.port}

#配置ribbon参数   ribbon:负载均衡
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 50000 #请求连接的超时时间
  ReadTimeout: 60000 #请求处理的超时时间


#课程详情预览相关配置数据
course-publish:
  siteId: 5df83e7bc30c831022f69d63
  templateId: 5e77285ab30b6027b81b5cca
  previewUrl: http://www.sfs.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhysicalPath: /course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/
